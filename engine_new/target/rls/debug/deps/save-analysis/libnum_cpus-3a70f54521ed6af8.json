{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.0","prelude":{"crate_id":{"name":"num_cpus","disambiguator":[17880344355015872407,11820833977262571888]},"crate_root":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num_cpus-1.8.0\\src","external_crates":[{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num_cpus-1.8.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[6632642847691309753,12840098174782900020]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num_cpus-1.8.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[16221171082884252812,10493375288036172938]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num_cpus-1.8.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8187956794019108730,13271944345592849966]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num_cpus-1.8.0\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7519235571909156002,7634807932555629540]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num_cpus-1.8.0\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[15552214320808041697,892024771200844221]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num_cpus-1.8.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2684868352909698727,7599806678555897088]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num_cpus-1.8.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8488918664934295771,3083820224962641173]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num_cpus-1.8.0\\src\\lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[4562254053164238449,6577659067628460402]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,95,99,112,117,115,45,49,46,56,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":11910,"line_start":1,"line_end":414,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,95,99,112,117,115,45,49,46,56,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":11910,"line_start":1,"line_end":414,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num_cpus-1.8.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":24}],"decl_id":null,"docs":" A crate with utilities to determine the number of CPUs available on the\n current system.\n \n Sometimes the CPU will exaggerate the number of CPUs it contains, because it can use\n [processor tricks] to deliver increased performance when there are more threads. This \n crate provides methods to get both the logical and physical numbers of cores.\n \n This information can be used as a guide to how many tasks can be run in parallel.\n There are many properties of the system architecture that will affect parallelism,\n for example memory access speeds (for all the caches and RAM) and the physical\n architecture of the processor, so the number of CPUs should be used as a rough guide\n only.\n ","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,95,99,112,117,115,45,49,46,56,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1266,"byte_end":1288,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"allow(non_snake_case)","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,95,99,112,117,115,45,49,46,56,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1347,"byte_end":1372,"line_start":32,"line_end":32,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":6},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,95,99,112,117,115,45,49,46,56,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2248,"byte_end":2251,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"get","qualname":"::get","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of available CPUs of the current system.\n \n This function will get the number of logical cores. Sometimes this is different from the number\n of physical cores (See [Simultaneous multithreading on Wikipedia][smt]).\n \n # Examples\n \n ```\n let cpus = num_cpus::get();\n if cpus > 1 {\n     println!(\"We are on a multicore system with {} CPUs\", cpus);\n } else {\n     println!(\"We are on a single core system\");\n }\n ```","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,95,99,112,117,115,45,49,46,56,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2231,"byte_end":2240,"line_start":61,"line_end":61,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,95,99,112,117,115,45,49,46,56,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3400,"byte_end":3412,"line_start":95,"line_end":95,"column_start":8,"column_end":20},"name":"get_physical","qualname":"::get_physical","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of physical cores of the current system.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,95,99,112,117,115,45,49,46,56,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3383,"byte_end":3392,"line_start":94,"line_end":94,"column_start":1,"column_end":10}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}