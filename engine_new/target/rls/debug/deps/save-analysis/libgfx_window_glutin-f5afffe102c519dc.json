{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.0","prelude":{"crate_id":{"name":"gfx_window_glutin","disambiguator":[1194320946578459770,10746814709377377029]},"crate_root":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src","external_crates":[{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7388982218659781768,16479198982728149813]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[3049978394402313881,15588496051909539332]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10458114609276168487,1605001482023944721]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[17463469637761008959,6448144999588395323]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[6680536495805205907,12098870708368708789]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[1960370853519955547,8039564684723324352]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1215275255591010451,14096923091225006160]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[6583970712841990355,10279957723018167985]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":9,"id":{"name":"gfx_core","disambiguator":[7966427587545594393,12848593549641959657]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":10,"id":{"name":"bitflags","disambiguator":[1459750896111189838,17780568812088152975]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":11,"id":{"name":"derivative","disambiguator":[13642895756356042975,15378632265546353098]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":12,"id":{"name":"draw_state","disambiguator":[3332053908556465781,12621989177333341854]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":13,"id":{"name":"log","disambiguator":[11464943086678321445,12791763620864206269]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[15491921511869218250,5605496195784733524]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":15,"id":{"name":"gfx_device_gl","disambiguator":[9242897141626486485,11330865234038707984]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":16,"id":{"name":"gfx_gl","disambiguator":[3086502083998957477,17093347983581128698]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":17,"id":{"name":"glutin","disambiguator":[5775418143366877902,1209765443703855672]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":18,"id":{"name":"lazy_static","disambiguator":[2316296300198509590,9072258313650199066]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":19,"id":{"name":"libc","disambiguator":[15849071580242782358,8568964093627821962]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":20,"id":{"name":"winit","disambiguator":[4258100395951734071,15507632172154708770]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","num":21,"id":{"name":"winapi","disambiguator":[8681041500441118068,17394551990563080452]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,103,102,120,95,119,105,110,100,111,119,95,103,108,117,116,105,110,45,48,46,50,54,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":600,"byte_end":7892,"line_start":15,"line_end":210,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,103,102,120,95,119,105,110,100,111,119,95,103,108,117,116,105,110,45,48,46,50,54,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":600,"byte_end":7892,"line_start":15,"line_end":210,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.26.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,103,102,120,95,119,105,110,100,111,119,95,103,108,117,116,105,110,45,48,46,50,54,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1819,"byte_end":1823,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"init","qualname":"::init","value":"fn <Cf, Df> (window: glutin::WindowBuilder, context: glutin::ContextBuilder, events_loop: &glutin::EventsLoop) -> (glutin::GlWindow, device_gl::Device, device_gl::Factory,\n handle::RenderTargetView<R, Cf>, handle::DepthStencilView<R, Df>)","parent":null,"children":[],"decl_id":null,"docs":" Initialize with a window builder.\n Generically parametrized version over the main framebuffer format.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,103,102,120,95,119,105,110,100,111,119,95,103,108,117,116,105,110,45,48,46,50,54,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3206,"byte_end":3219,"line_start":96,"line_end":96,"column_start":8,"column_end":21},"name":"init_existing","qualname":"::init_existing","value":"fn <Cf, Df> (window: &glutin::GlWindow) -> (device_gl::Device, device_gl::Factory, handle::RenderTargetView<R, Cf>,\n handle::DepthStencilView<R, Df>)","parent":null,"children":[],"decl_id":null,"docs":" Initialize with an existing Glutin window.\n Generically parametrized version over the main framebuffer format.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,103,102,120,95,119,105,110,100,111,119,95,103,108,117,116,105,110,45,48,46,50,54,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4273,"byte_end":4281,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"init_raw","qualname":"::init_raw","value":"fn (window: glutin::WindowBuilder, mut context: glutin::ContextBuilder, events_loop: &glutin::EventsLoop, color_format: format::Format, ds_format: format::Format) -> (glutin::GlWindow, device_gl::Device, device_gl::Factory,\n handle::RawRenderTargetView<R>, handle::RawDepthStencilView<R>)","parent":null,"children":[],"decl_id":null,"docs":" Initialize with a window builder. Raw version.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,103,102,120,95,119,105,110,100,111,119,95,103,108,117,116,105,110,45,48,46,50,54,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5523,"byte_end":5540,"line_start":153,"line_end":153,"column_start":8,"column_end":25},"name":"init_existing_raw","qualname":"::init_existing_raw","value":"fn (window: &glutin::GlWindow, color_format: format::Format, ds_format: format::Format) -> (device_gl::Device, device_gl::Factory, handle::RawRenderTargetView<R>,\n handle::RawDepthStencilView<R>)","parent":null,"children":[],"decl_id":null,"docs":" Initialize with an existing Glutin window. Raw version.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,103,102,120,95,119,105,110,100,111,119,95,103,108,117,116,105,110,45,48,46,50,54,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6274,"byte_end":6286,"line_start":172,"line_end":172,"column_start":8,"column_end":20},"name":"update_views","qualname":"::update_views","value":"fn <Cf, Df> (window: &glutin::GlWindow, color_view: &mut handle::RenderTargetView<R, Cf>, ds_view: &mut handle::DepthStencilView<R, Df>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update the internal dimensions of the main framebuffer targets. Generic version over the format.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,103,102,120,95,119,105,110,100,111,119,95,103,108,117,116,105,110,45,48,46,50,54,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6876,"byte_end":6892,"line_start":187,"line_end":187,"column_start":8,"column_end":24},"name":"update_views_raw","qualname":"::update_views_raw","value":"fn (window: &glutin::GlWindow, old_dimensions: texture::Dimensions, color_format: format::Format, ds_format: format::Format) -> Option<(handle::RawRenderTargetView<R>, handle::RawDepthStencilView<R>)>","parent":null,"children":[],"decl_id":null,"docs":" Return new main target views if the window resolution has changed from the old dimensions.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,101,120,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,103,102,120,95,119,105,110,100,111,119,95,103,108,117,116,105,110,45,48,46,50,54,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":7463,"byte_end":7472,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"new_views","qualname":"::new_views","value":"fn <Cf, Df> (window: &glutin::GlWindow) -> (handle::RenderTargetView<R, Cf>, handle::DepthStencilView<R, Df>)","parent":null,"children":[],"decl_id":null,"docs":" Create new main target views based on the current size of the window.\n Best called just after a WindowResize event.\n","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}